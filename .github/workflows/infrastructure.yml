name: Infrastructure deployment

on:
  push:
    branches:
    - main
    paths:
    - 'infrastructure/**'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
jobs:
  deploy_frontend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: infrastructure/frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Generate TFVars file
        run: |
          echo "domain_name = \"${{ vars.DOMAIN_NAME }}\"" > terraform.auto.tfvars
          echo "hosted_zone_id = \"${{ secrets.HOSTED_ZONE_ID }}\"" >> terraform.auto.tfvars
        
      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
        
  deploy_backend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: infrastructure/backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Generate TFVars file
        run: |
          echo "slack_webhook = \"${{ secrets.WEBHOOK_SLACK }}\"" > terraform.auto.tfvars
          echo "pagerduty_webhook = \"${{ secrets.WEBHOOK_PAGERDUTY }}\"" >> terraform.auto.tfvars
          echo "notification_email = \"${{ secrets.NOTIFICATION_EMAIL }}\"" >> terraform.auto.tfvars
          echo "api_domain = \"${{ vars.API_DOMAIN }}\"" >> terraform.auto.tfvars
          echo "hosted_zone_id = \"${{ secrets.HOSTED_ZONE_ID }}\"" >> terraform.auto.tfvars


      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  test_frontend:
    runs-on: ubuntu-latest
    needs: deploy_frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install cypress
        run: npm install cypress --save-dev
        
      - name: Run Cypress tests
        working-directory: tests/frontend
        run: npx cypress run
      
  test_backend:
    runs-on: ubuntu-latest
    needs: deploy_backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      - name: Install Dependencies
        run: pip install boto3 moto['dynamodb']

      - name: Run Tests
        run: python backend/lambda_function_test.py